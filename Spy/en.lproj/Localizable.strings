/* 
  Localizable.strings (English)
  Spy

  Created for localized strings.
*/

"rounds_left_unformeted" = "%d rounds left until the game ends";
"minutes_format" = "%d minutes";
"rounds_format" = "%d rounds";


//GENERAL
"cancel" = "Cancel";
"delete" = "Delete";
"error" = "Error";
"okey" = "Okey";

"player_x" = "Player %d";
"edit:_x" = "Edit: %@";
"player_was_a_spy" = "Player %d was a spy";
"player_was_a_civilian" = "Player %d was a civilian";
"civil_points" = "Civilians +%d";
"spy_points" = "Spy +%d";
"spy_points_singular" = "Spy +%d";
"spy_points_plural" = "Spies +%d";
"civil" = "Civilian";
"spy" = "Spy";

// Enter VC
"new_game" = "New Game";
"settings" = "Settings";
"how_to_play" = "How to Play";

// Inside CategoryVC
"select_category" = "Select Category";

// Add Category VC
"category_title" = "Category Title";
"value" = "Value ";
"edit" = "Edit";
"save_changes" = "Save Changes";
"confirm_delete" = "Delete Category";
"are_you_sure_delete_category" = "Are you sure you want to delete this category?";
"save_category" = "Save Category";
"add_new_category" = "Add New Category";
"name_is_already_in_usage_pick_another" = "This category name is already in use. Please choose a different name.";
"category_title_min_length" = "Category title must be at least %d characters long";
"category_min_values_required" = "At least %d category values are required";
"category_max_values_allowed" = "You can enter up to %d category values";
"category_value_min_length" = "Each category value must be at least %d characters. Value to fix: '%@'";

// Custom Display Cell
"new" = "New";

// Custom Player Cell
"player" = "Player";

// Score Cell Container
"score" = "Score";

// Game Settings Group Manager
"category" = "Category";
"select" = "Select";
"round_time" = "Round Time";
"minutes" = " minutes";
"round_count" = "Round Count";
"rounds" = " rounds";
"show_hints" = "Show Hints";

// Custom Card View
"tap_to_reveal_your_role" = "Tap to reveal your role!";
"spy" = "Spy";
"civil" = "Civilian";
"try_to_blend_in" = "Try to blend in!";

// Category Manager
"other" = "Other";

// Countdown VC
"hints" = "Hints";
"find_the_spies" = "Find the spies!";
"find_the_spies_singular" = "Find the spy!";
"find_the_spies_plural" = "Find the spies!";
"find_the_spies_group" = "Find the spies!";
"find_the_spies_group_singular" = "Find the spy!";
"find_the_spies_group_plural" = "Find the spies!";
"select_a_player_to_blame" = "Select a player to blame";
"-1_point_for_each_civilian" = "-1 point for each civilian";
"-1_point_for_each_civilian_singular" = "-%d point for the civilian";
"-1_point_for_each_civilian_plural" = "-%d points for each civilian";
"+1_point_for_each_spy" = "+1 point for each spy";
"+1_point_for_each_spy_singular" = "+%d point for the spy";
"+1_point_for_each_spy_plural" = "+%d points for each spy";
"false_blame_warning_label" = "A false accusation reduces the total points received by civilians and increases the spy's!";
"false_blame_warning_label_singular" = "A false accusation reduces the total points received by civilians and increases the spy's!";
"false_blame_warning_label_plural" = "A false accusation reduces the total points received by civilians and increases the spies'!";
"blame_the_player" = "Blame the player!";
"PLAYER" = "PLAYER";
"ALL_SPIES_FOUND" = "SPIES FOUND";
"SPIES_WON" = "SPIES FOUND";
"TIME_UP_AGENTS_WIN" = "TIME'S UP, AGENTS WIN!";
"there_is_no_hints_for_this_category" = "There is no hints for this category";

// Custom Players VC

"save_players" = "Save Players";

// Default Setting sVC

"default_settings" = "Default Settings";
"player_count_static" = "Player Count";
"spy_count_static" = "Spy Count";
"save_as_default" = "Save as default";
"customize" = "Customize";

// Game Cards VC

"swipe_the_card_before_next_player" = "Swipe the card before passing the phone to the next player";
"unknown" = "Unknown";

// Game Settings VC

"play" = "Play";

// Scores VC

"winner_civils" = "Winner: Civilians";
"winner_spies" = "Winner: Spies";
"winner_spies_singular" = "Winner: Spy";
"winner_spies_plural" = "Winner: Spies";
"winner_spies_times_up" = "Winner: Spies (Time's Up)";
"winner_spies_times_up_singular" = "Winner: Spy (Time's Up)";
"winner_spies_times_up_plural" = "Winner: Spies (Time's Up)";
"winner_determining" = "Winners: Determining...";
"last_round" = "This was the last round!";
"winner_prefix" = "Winner: ";
"selected_word_prefix" = "Selected Word: %@";
"civil_point_text" = "Civilians +3";
"spy_point_text" = "Spy +1";
"score_bottom_info_text" = "Each civilian earns points equal to the number of active civilians. Points lost due to false accusations by civilians are transferred to the spy.";
"score_bottom_info_text_singular" = "Each civilian earns points equal to the number of active civilians. Points lost due to false accusations by civilians are transferred to the spy.";
"score_bottom_info_text_plural" = "Each civilian earns points equal to the number of active civilians. Points lost due to false accusations by civilians are transferred to the spies.";
"SPY" = "SPY";
"CIVIL" = "CIVIL";
"score_text" = "Score: %d";
"next_round" = "Next Round";
"view_final_scores" = "View Final Scores";

// Start Timer VC

"find_the_spy_before_time_runs_out" = "Find the spy before time runs out! Otherwise, the spy wins";
"find_the_spy_before_time_runs_out_singular" = "Find the spy before time runs out! Otherwise, the spy wins";
"find_the_spy_before_time_runs_out_plural" = "Find the spies before time runs out! Otherwise, the spies win";
"tap_to_start_when_ready" = "Tap the screen to start the timer when everyone is ready";

// Total Scores VC

"game_end_scores_title" = "Final Game Scores";
"default_player_name" = "Player %d";
"player_score_text" = "%@: %d points"; //name and sore
"play_again" = "Play Again";






// DEFAULT CATEGORIES

//basic
"basic" = "Basic";
"book" = "Book";
"pen" = "Pen";
"table" = "Table";
"chair" = "Chair";
"glass" = "Glass";
"plate" = "Plate";
"fork" = "Fork";
"knife" = "Knife";
"spoon" = "Spoon";
"phone" = "Phone";
"computer" = "Computer";
"glasses" = "Glasses";
"watch" = "Watch";
"key" = "Key";
"wallet" = "Wallet";
"umbrella" = "Umbrella";
"television" = "Television";
"lamp" = "Lamp";
"mirror" = "Mirror";
"door" = "Door";
"book" = "Book";
"pen" = "Pen";
"table" = "Table";
"chair" = "Chair";
"glass" = "Glass";
"plate" = "Plate";
"fork" = "Fork";
"knife" = "Knife";
"spoon" = "Spoon";
"phone" = "Phone";
"computer" = "Computer";
"glasses" = "Glasses";
"watch" = "Watch";
"key" = "Key";
"wallet" = "Wallet";
"umbrella" = "Umbrella";
"television" = "Television";
"lamp" = "Lamp";
"mirror" = "Mirror";
"door" = "Door";
"window" = "Window";
"bed" = "Bed";
"pillow" = "Pillow";
"blanket" = "Blanket";
"bag" = "Bag";
"shoe" = "Shoe";
"sock" = "Sock";
"hat" = "Hat";
"towel" = "Towel";
"toothbrush" = "Toothbrush";
"comb" = "Comb";
"bottle" = "Bottle";
"cup" = "Cup";
"notebook" = "Notebook";
"pencil" = "Pencil";
"eraser" = "Eraser";
"scissors" = "Scissors";
"remote" = "Remote";
"charger" = "Charger";
"calendar" = "Calendar";

//travel
"travel" = "Travel";
"plane" = "Plane";
"train" = "Train";
"bus" = "Bus";
"ship" = "Ship";
"car" = "Car";
"suitcase" = "Suitcase";
"luggage" = "Luggage";
"passport" = "Passport";
"ticket" = "Ticket";
"hotel" = "Hotel";
"map" = "Map";
"guide" = "Guide";
"sea" = "Sea";
"beach" = "Beach";
"mountain" = "Mountain";
"forest" = "Forest";
"city" = "City";
"museum" = "Museum";
"holiday" = "Holiday";
"journey" = "Journey";
"airport" = "Airport";
"terminal" = "Terminal";
"station" = "Station";
"subway" = "Subway";
"metro" = "Metro";
"tram" = "Tram";
"bicycle" = "Bicycle";
"motorbike" = "Motorbike";
"taxi" = "Taxi";
"ferry" = "Ferry";
"cruise" = "Cruise";
"backpack" = "Backpack";
"hostel" = "Hostel";
"campsite" = "Campsite";
"visa" = "Visa";
"reservation" = "Reservation";
"itinerary" = "Itinerary";
"souvenir" = "Souvenir";
"photograph" = "Photograph";
"postcard" = "Postcard";

//food
"food" = "Food";
"bread" = "Bread";
"cheese" = "Cheese";
"olive" = "Olive";
"tomato" = "Tomato";
"cucumber" = "Cucumber";
"soup" = "Soup";
"pasta" = "Pasta";
"rice" = "Rice";
"meat" = "Meat";
"chicken" = "Chicken";
"fish" = "Fish";
"fruit" = "Fruit";
"vegetable" = "Vegetable";
"dessert" = "Dessert";
"coffee" = "Coffee";
"tea" = "Tea";
"water" = "Water";
"restaurant" = "Restaurant";
"chef" = "Chef";
"recipe" = "Recipe";
"salt" = "Salt";
"pepper" = "Pepper";
"butter" = "Butter";
"yogurt" = "Yogurt";
"egg" = "Egg";
"salad" = "Salad";
"pizza" = "Pizza";
"hamburger" = "Hamburger";
"sandwich" = "Sandwich";
"sushi" = "Sushi";
"grill" = "Grill";
"barbecue" = "Barbecue";
"noodle" = "Noodle";
"steak" = "Steak";
"icecream" = "Ice Cream";
"chocolate" = "Chocolate";
"spice" = "Spice";
"herb" = "Herb";
"garlic" = "Garlic";
"onion" = "Onion";

//history
"history" = "History";
"ottoman" = "Ottoman";
"ataturk" = "Atat√ºrk";
"republic" = "Republic";
"empire" = "Empire";
"war" = "War";
"peace" = "Peace";
"treaty" = "Treaty";
"king" = "King";
"queen" = "Queen";
"sultan" = "Sultan";
"castle" = "Castle";
"palace" = "Palace";
"archaeology" = "Archaeology";
"civilization" = "Civilization";
"middle_ages" = "Middle Ages";
"renaissance" = "Renaissance";
"revolution" = "Revolution";
"monument" = "Monument";
"inscription" = "Inscription";
"coin" = "Coin";
"dynasty" = "Dynasty";
"pharaoh" = "Pharaoh";
"conquest" = "Conquest";
"crusade" = "Crusade";
"colony" = "Colony";
"independence" = "Independence";
"constitution" = "Constitution";
"parliament" = "Parliament";
"battle" = "Battle";
"legion" = "Legion";
"senate" = "Senate";
"artifact" = "Artifact";
"relic" = "Relic";
"scroll" = "Scroll";
"manuscript" = "Manuscript";
"chronicle" = "Chronicle";
"timeline" = "Timeline";
"excavation" = "Excavation";
"fortress" = "Fortress";
"citadel" = "Citadel";

//places
"places" = "Places";
"cinema" = "Cinema";
"airport" = "Airport";
"metro" = "Metro";
"bus" = "Bus";
"train" = "Train";
"harbor" = "Harbor";
"museum" = "Museum";
"library" = "Library";
"park" = "Park";
"stadium" = "Stadium";
"hospital" = "Hospital";
"school" = "School";
"university" = "University";
"restaurant" = "Restaurant";
"cafe" = "Cafe";
"hotel" = "Hotel";
"supermarket" = "Supermarket";
"pharmacy" = "Pharmacy";
"bank" = "Bank";
"post office" = "Post Office";
"bakery" = "Bakery";
"butcher" = "Butcher";
"police station" = "Police Station";
"fire station" = "Fire Station";
"courthouse" = "Courthouse";
"embassy" = "Embassy";
"zoo" = "Zoo";
"aquarium" = "Aquarium";
"theater" = "Theater";
"mall" = "Mall";
"gym" = "Gym";
"swimming pool" = "Swimming Pool";
"playground" = "Playground";
"factory" = "Factory";
"warehouse" = "Warehouse";
"parking lot" = "Parking Lot";
"gas station" = "Gas Station";
"church" = "Church";
"mosque" = "Mosque";
"temple" = "Temple";

//sports
"sports" = "Sports";
"football" = "Football";
"basketball" = "Basketball";
"volleyball" = "Volleyball";
"tennis" = "Tennis";
"swimming" = "Swimming";
"athletics" = "Athletics";
"running" = "Running";
"match" = "Match";
"training" = "Training";
"athlete" = "Athlete";
"team" = "Team";
"ball" = "Ball";
"goal" = "Goal";
"hoop" = "Hoop";
"net" = "Net";
"racket" = "Racket";
"stadium" = "Stadium";
"medal" = "Medal";
"trophy" = "Trophy";
"olympics" = "Olympics";
"baseball" = "Baseball";
"golf" = "Golf";
"table tennis" = "Table Tennis";
"badminton" = "Badminton";
"boxing" = "Boxing";
"wrestling" = "Wrestling";
"karate" = "Karate";
"judo" = "Judo";
"taekwondo" = "Taekwondo";
"skiing" = "Skiing";
"snowboarding" = "Snowboarding";
"cycling" = "Cycling";
"motor racing" = "Motor Racing";
"surfing" = "Surfing";
"skateboarding" = "Skateboarding";
"archery" = "Archery";
"fencing" = "Fencing";
"horse riding" = "Horse Riding";
"diving" = "Diving";
"rowing" = "Rowing";

//animals
"animals" = "Animals";
"dog" = "Dog";
"cat" = "Cat";
"bird" = "Bird";
"fish" = "Fish";
"horse" = "Horse";
"cow" = "Cow";
"pig" = "Pig";
"sheep" = "Sheep";
"goat" = "Goat";
"chicken" = "Chicken";
"duck" = "Duck";
"rabbit" = "Rabbit";
"hamster" = "Hamster";
"guinea pig" = "Guinea Pig";
"turtle" = "Turtle";
"snake" = "Snake";
"lizard" = "Lizard";
"frog" = "Frog";
"elephant" = "Elephant";
"lion" = "Lion";
"tiger" = "Tiger";
"bear" = "Bear";
"wolf" = "Wolf";
"fox" = "Fox";
"deer" = "Deer";
"monkey" = "Monkey";
"gorilla" = "Gorilla";
"penguin" = "Penguin";
"dolphin" = "Dolphin";
"whale" = "Whale";
"shark" = "Shark";
"octopus" = "Octopus";
"crab" = "Crab";
"lobster" = "Lobster";
"butterfly" = "Butterfly";
"bee" = "Bee";
"ant" = "Ant";
"spider" = "Spider";
"scorpion" = "Scorpion";
"bat" = "Bat";

//nature
"nature" = "Nature";
"tree" = "Tree";
"flower" = "Flower";
"grass" = "Grass";
"bush" = "Bush";
"forest" = "Forest";
"mountain" = "Mountain";
"river" = "River";
"lake" = "Lake";
"ocean" = "Ocean";
"beach" = "Beach";
"desert" = "Desert";
"jungle" = "Jungle";
"valley" = "Valley";
"canyon" = "Canyon";
"waterfall" = "Waterfall";
"volcano" = "Volcano";
"island" = "Island";
"cave" = "Cave";
"cliff" = "Cliff";
"meadow" = "Meadow";
"swamp" = "Swamp";
"marsh" = "Marsh";
"tundra" = "Tundra";
"savanna" = "Savanna";
"reef" = "Reef";
"coral" = "Coral";
"moss" = "Moss";
"fern" = "Fern";
"vine" = "Vine";
"cactus" = "Cactus";
"bamboo" = "Bamboo";
"palm" = "Palm";
"oak" = "Oak";
"pine" = "Pine";
"maple" = "Maple";
"rose" = "Rose";
"tulip" = "Tulip";
"daisy" = "Daisy";
"sunflower" = "Sunflower";
"lily" = "Lily";
"orchid" = "Orchid";

//technology
"technology" = "Technology";
"computer" = "Computer";
"laptop" = "Laptop";
"tablet" = "Tablet";
"smartphone" = "Smartphone";
"television" = "Television";
"camera" = "Camera";
"headphones" = "Headphones";
"speaker" = "Speaker";
"microphone" = "Microphone";
"keyboard" = "Keyboard";
"mouse" = "Mouse";
"printer" = "Printer";
"scanner" = "Scanner";
"router" = "Router";
"modem" = "Modem";
"server" = "Server";
"database" = "Database";
"software" = "Software";
"app" = "App";
"website" = "Website";
"internet" = "Internet";
"wifi" = "WiFi";
"bluetooth" = "Bluetooth";
"usb" = "USB";
"cable" = "Cable";
"battery" = "Battery";
"charger" = "Charger";
"screen" = "Screen";
"processor" = "Processor";
"memory" = "Memory";
"hard drive" = "Hard Drive";
"cloud" = "Cloud";
"email" = "Email";
"social media" = "Social Media";
"gaming" = "Gaming";
"virtual reality" = "Virtual Reality";
"artificial intelligence" = "Artificial Intelligence";
"robot" = "Robot";
"drone" = "Drone";
"satellite" = "Satellite";

//entertainment
"entertainment" = "Entertainment";
"movie" = "Movie";
"film" = "Film";
"series" = "Series";
"show" = "Show";
"concert" = "Concert";
"theater" = "Theater";
"play" = "Play";
"musical" = "Musical";
"opera" = "Opera";
"ballet" = "Ballet";
"comedy" = "Comedy";
"drama" = "Drama";
"action" = "Action";
"horror" = "Horror";
"romance" = "Romance";
"documentary" = "Documentary";
"animation" = "Animation";
"cartoon" = "Cartoon";
"game" = "Game";
"puzzle" = "Puzzle";
"book" = "Book";
"magazine" = "Magazine";
"newspaper" = "Newspaper";
"comic" = "Comic";
"novel" = "Novel";
"poetry" = "Poetry";
"music" = "Music";
"song" = "Song";
"album" = "Album";
"band" = "Band";
"singer" = "Singer";
"actor" = "Actor";
"actress" = "Actress";
"director" = "Director";
"producer" = "Producer";
"writer" = "Writer";
"artist" = "Artist";
"painter" = "Painter";
"sculptor" = "Sculptor";
"photographer" = "Photographer";

//professions
"professions" = "Professions";
"home" = "Home";
"auto_parts" = "Auto Parts";
"programming" = "Programming";
"doctor" = "Doctor";
"nurse" = "Nurse";
"teacher" = "Teacher";
"student" = "Student";
"engineer" = "Engineer";
"architect" = "Architect";
"lawyer" = "Lawyer";
"judge" = "Judge";
"police" = "Police";
"firefighter" = "Firefighter";
"soldier" = "Soldier";
"pilot" = "Pilot";
"driver" = "Driver";
"chef" = "Chef";
"waiter" = "Waiter";
"cashier" = "Cashier";
"salesperson" = "Salesperson";
"manager" = "Manager";
"secretary" = "Secretary";
"receptionist" = "Receptionist";
"artist" = "Artist";
"musician" = "Musician";
"actor" = "Actor";
"writer" = "Writer";
"journalist" = "Journalist";
"reporter" = "Reporter";
"photographer" = "Photographer";
"designer" = "Designer";
"programmer" = "Programmer";
"scientist" = "Scientist";
"researcher" = "Researcher";
"professor" = "Professor";
"dentist" = "Dentist";
"veterinarian" = "Veterinarian";
"mechanic" = "Mechanic";
"electrician" = "Electrician";
"plumber" = "Plumber";
"carpenter" = "Carpenter";
"farmer" = "Farmer";
"fisherman" = "Fisherman";

// home words
"house" = "House";
"apartment" = "Apartment";
"room" = "Room";
"kitchen" = "Kitchen";
"bathroom" = "Bathroom";
"bedroom" = "Bedroom";
"living room" = "Living Room";
"dining room" = "Dining Room";
"garage" = "Garage";
"garden" = "Garden";
"balcony" = "Balcony";
"terrace" = "Terrace";
"roof" = "Roof";
"basement" = "Basement";
"attic" = "Attic";
"closet" = "Closet";
"wardrobe" = "Wardrobe";
"cabinet" = "Cabinet";
"shelf" = "Shelf";
"drawer" = "Drawer";
"sofa" = "Sofa";
"armchair" = "Armchair";
"dining table" = "Dining Table";
"bed" = "Bed";
"mattress" = "Mattress";
"pillow" = "Pillow";
"blanket" = "Blanket";
"curtain" = "Curtain";
"carpet" = "Carpet";
"rug" = "Rug";
"lamp" = "Lamp";
"chandelier" = "Chandelier";
"mirror" = "Mirror";
"painting" = "Painting";
"plant" = "Plant";
"vase" = "Vase";
"clock" = "Clock";
"thermometer" = "Thermometer";
"thermostat" = "Thermostat";
"smoke detector" = "Smoke Detector";

// auto_parts words
"gearbox" = "Gearbox";
"drive shaft" = "Drive Shaft";
"steering bearing set" = "Steering Bearing Set";
"engine" = "Engine";
"transmission" = "Transmission";
"clutch" = "Clutch";
"brake pad" = "Brake Pad";
"brake disc" = "Brake Disc";
"brake caliper" = "Brake Caliper";
"brake fluid" = "Brake Fluid";
"oil filter" = "Oil Filter";
"air filter" = "Air Filter";
"fuel filter" = "Fuel Filter";
"spark plug" = "Spark Plug";
"ignition coil" = "Ignition Coil";
"battery" = "Battery";
"alternator" = "Alternator";
"starter motor" = "Starter Motor";
"radiator" = "Radiator";
"thermostat" = "Thermostat";
"water pump" = "Water Pump";
"oil pump" = "Oil Pump";
"fuel pump" = "Fuel Pump";
"injector" = "Injector";
"carburetor" = "Carburetor";
"exhaust pipe" = "Exhaust Pipe";
"muffler" = "Muffler";
"catalytic converter" = "Catalytic Converter";
"oxygen sensor" = "Oxygen Sensor";
"mass airflow sensor" = "Mass Airflow Sensor";
"throttle body" = "Throttle Body";
"intake manifold" = "Intake Manifold";
"exhaust manifold" = "Exhaust Manifold";
"camshaft" = "Camshaft";
"crankshaft" = "Crankshaft";
"piston" = "Piston";
"connecting rod" = "Connecting Rod";
"cylinder head" = "Cylinder Head";
"cylinder block" = "Cylinder Block";
"valve" = "Valve";
"timing belt" = "Timing Belt";
"serpentine belt" = "Serpentine Belt";
"tensioner" = "Tensioner";
"idler pulley" = "Idler Pulley";
"shock absorber" = "Shock Absorber";
"spring" = "Spring";
"strut" = "Strut";
"control arm" = "Control Arm";
"ball joint" = "Ball Joint";
"tie rod" = "Tie Rod";

// programming words
"debug" = "Debug";
"bug" = "Bug";
"backend" = "Backend";
"frontend" = "Frontend";
"algorithm" = "Algorithm";
"function" = "Function";
"variable" = "Variable";
"class" = "Class";
"object" = "Object";
"method" = "Method";
"inheritance" = "Inheritance";
"polymorphism" = "Polymorphism";
"encapsulation" = "Encapsulation";
"abstraction" = "Abstraction";
"interface" = "Interface";
"api" = "API";
"database" = "Database";
"query" = "Query";
"sql" = "SQL";
"nosql" = "NoSQL";
"framework" = "Framework";
"library" = "Library";
"dependency" = "Dependency";
"package" = "Package";
"repository" = "Repository";
"version control" = "Version Control";
"git" = "Git";
"commit" = "Commit";
"branch" = "Branch";
"merge" = "Merge";
"deployment" = "Deployment";
"server" = "Server";
"client" = "Client";
"protocol" = "Protocol";
"http" = "HTTP";
"https" = "HTTPS";
"json" = "JSON";
"xml" = "XML";
"rest" = "REST";
"graphql" = "GraphQL";
"microservice" = "Microservice";
"container" = "Container";
"docker" = "Docker";
"kubernetes" = "Kubernetes";
"ci cd" = "CI/CD";
"testing" = "Testing";
"unit test" = "Unit Test";
"integration test" = "Integration Test";
"refactoring" = "Refactoring";
"optimization" = "Optimization";


// HINTS

// basic
"basic01" = "Used daily?";
"basic02" = "Common at home?";
"basic03" = "Hand-held?";
"basic04" = "Electronic?";
"basic05" = "Made of plastic?";
"basic06" = "Used by students?";
"basic07" = "Found in kitchens?";
"basic08" = "Fits in a bag?";
"basic09" = "Small size?";
"basic10" = "For writing?";
"basic11" = "Breaks easily?";
"basic12" = "Made of glass?";
"basic13" = "Piece of furniture?";
"basic14" = "Needs electricity?";
"basic15" = "Wearable?";
"basic16" = "For communication?";
"basic17" = "Used by kids?";
"basic18" = "Portable?";
"basic19" = "On a desk?";
"basic20" = "Tool?";
"basic21" = "Decorative?";
"basic22" = "Can be shared?";
"basic23" = "Used in rain?";
"basic24" = "Found at school?";
"basic25" = "Personal item?";
"basic26" = "Part of routine?";
"basic27" = "Opens and closes?";
"basic28" = "Battery-powered?";
"basic29" = "Used in bathroom?";
"basic30" = "Helps organize?";
"basic31" = "Washable?";
"basic32" = "Has moving parts?";
"basic33" = "Disposable?";
"basic34" = "Makes sound?";
"basic35" = "Used for cleaning?";

// travel
"travel01" = "Related to transport?";
"travel02" = "Needs a ticket?";
"travel03" = "Is it a place?";
"travel04" = "Do tourists go here?";
"travel05" = "Can you ride it?";
"travel06" = "Place to sleep?";
"travel07" = "Involves packing?";
"travel08" = "Found at the airport?";
"travel09" = "Related to nature?";
"travel10" = "Do people take photos here?";
"travel11" = "Holiday activity?";
"travel12" = "Part of a journey?";
"travel13" = "Can you fly there?";
"travel14" = "For fun?";
"travel15" = "Is it pricey?";
"travel16" = "Done with family?";
"travel17" = "Found in big cities?";
"travel18" = "Is it a building?";
"travel19" = "Needs ID?";
"travel20" = "Helps navigation?";
"travel21" = "On a map?";
"travel22" = "Near the sea?";
"travel23" = "Seasonal?";
"travel24" = "Indoors?";
"travel25" = "Needs a guide?";
"travel26" = "Part of a tour?";
"travel27" = "International?";
"travel28" = "Eco-friendly?";
"travel29" = "Day trip?";
"travel30" = "Involves walking?";
"travel31" = "Needs a visa?";
"travel32" = "Popular with backpackers?";
"travel33" = "On another continent?";
"travel34" = "Reachable by train?";
"travel35" = "Culturally important?";

// food
"food01" = "Usually eaten hot?";
"food02" = "Sweet or salty?";
"food03" = "Okay for vegetarians?";
"food04" = "Common at breakfast?";
"food05" = "Eaten with a spoon?";
"food06" = "Main dish?";
"food07" = "Served at restaurants?";
"food08" = "Spicy?";
"food09" = "Part of Turkish cuisine?";
"food10" = "Considered healthy?";
"food11" = "Cooked at home?";
"food12" = "Contains meat?";
"food13" = "Made from dough?";
"food14" = "Served cold?";
"food15" = "Is it a drink?";
"food16" = "Loved by kids?";
"food17" = "Crunchy?";
"food18" = "Street food?";
"food19" = "Needs refrigeration?";
"food20" = "Eaten as a snack?";
"food21" = "Can you drink it?";
"food22" = "Found in every home?";
"food23" = "Homemade or store-bought?";
"food24" = "High in sugar?";
"food25" = "Served at weddings?";
"food26" = "Fried?";
"food27" = "Eaten with bread?";
"food28" = "Dairy-based?";
"food29" = "Comes in a can?";
"food30" = "A dessert?";
"food31" = "Eaten with hands?";
"food32" = "Seasonal?";
"food33" = "Can be grilled?";
"food34" = "Eaten on holidays?";
"food35" = "Organic?";
"food36" = "Comfort food?";

// history
"history01" = "From the past?";
"history02" = "War-related?";
"history03" = "A person?";
"history04" = "A place?";
"history05" = "Was it powerful?";
"history06" = "From ancient times?";
"history07" = "Taught in school?";
"history08" = "Part of Turkish history?";
"history09" = "European?";
"history10" = "About peace?";
"history11" = "A ruler?";
"history12" = "Important in politics?";
"history13" = "Still exists?";
"history14" = "Symbolic?";
"history15" = "A document?";
"history16" = "An object?";
"history17" = "Form of government?";
"history18" = "A revolution?";
"history19" = "Architectural?";
"history20" = "Was it influential?";
"history21" = "Changed the world?";
"history22" = "Before the 20th century?";
"history23" = "Still discussed today?";
"history24" = "Shown in museums?";
"history25" = "Ancient?";
"history26" = "Destroyed?";
"history27" = "A historical event?";
"history28" = "Linked to a famous figure?";
"history29" = "Happened in the last 500 years?";
"history30" = "Tied to a specific country?";
"history31" = "Controversial?";
"history32" = "Still commemorated?";
"history33" = "Involved exploration?";
"history34" = "A turning point?";
"history35" = "Has a known date?";

// places
"places01" = "Indoor place?";
"places02" = "Used for transport?";
"places03" = "Open to everyone?";
"places04" = "Need a ticket to enter?";
"places05" = "Do people work there?";
"places06" = "Do students go there?";
"places07" = "Quiet place?";
"places08" = "Related to airplanes?";
"places09" = "Do vehicles enter?";
"places10" = "Are events held there?";
"places11" = "Not found in nature?";
"places12" = "Mentioned in school?";
"places13" = "Visited often?";
"places14" = "Historical place?";
"places15" = "Tourist attraction?";
"places16" = "Medical help available?";
"places17" = "An official location?";
"places18" = "Can you go and see it?";
"places19" = "In the city center?";
"places20" = "Government-related?";
"places21" = "Useful for people?";
"places22" = "Has security?";
"places23" = "Regular staff there?";
"places24" = "Medicine-related?";
"places25" = "Changed over time?";
"places26" = "Used for treatment?";
"places27" = "Uses electricity?";
"places28" = "Has technology inside?";
"places29" = "Man-made?";
"places30" = "Used as a school example?";
"places31" = "Special for visitors?";
"places32" = "Exposed to weather?";
"places33" = "Part of a building?";
"places34" = "Shown on maps?";
"places35" = "Easy to find?";

// sports
"sports01" = "Played with a ball?";
"sports02" = "Team sport?";
"sports03" = "Played indoors?";
"sports04" = "Use hands?";
"sports05" = "Olympic sport?";
"sports06" = "Popular in Turkey?";
"sports07" = "Need a net?";
"sports08" = "Has a referee?";
"sports09" = "Water sport?";
"sports10" = "Combat sport?";
"sports11" = "Played on grass?";
"sports12" = "Physically intense?";
"sports13" = "Scored with points?";
"sports14" = "Can be played solo?";
"sports15" = "Has goals?";
"sports16" = "Seasonal?";
"sports17" = "Racket sport?";
"sports18" = "Contact-heavy?";
"sports19" = "Can be dangerous?";
"sports20" = "Popular worldwide?";
"sports21" = "Need special gear?";
"sports22" = "Time-limited?";
"sports23" = "Played professionally?";
"sports24" = "Judged sport?";
"sports25" = "Played for fun?";
"sports26" = "Played in schools?";
"sports27" = "Involves running?";
"sports28" = "Played in stadiums?";
"sports29" = "Part of a league?";
"sports30" = "Played by all genders?";
"sports31" = "Use a bat or stick?";
"sports32" = "Has a coach?";
"sports33" = "Involves jumping?";
"sports34" = "Outdoor sport?";
"sports35" = "Played on a court?";


// animals
"animals01" = "Can it be a pet?";
"animals02" = "Raised by farmers?";
"animals03" = "Found in the wild?";
"animals04" = "Can it fly?";
"animals05" = "Lives underwater?";
"animals06" = "Dangerous to approach?";
"animals07" = "Kept in homes?";
"animals08" = "Found in rainforests?";
"animals09" = "Has fur or hair?";
"animals10" = "Has feathers?";
"animals11" = "Has scales?";
"animals12" = "Has six legs?";
"animals13" = "Found in the ocean?";
"animals14" = "Active at night?";
"animals15" = "Eats only plants?";
"animals16" = "Hunts other animals?";
"animals17" = "Eats plants and meat?";
"animals18" = "Endangered species?";
"animals19" = "Seen on safari?";
"animals20" = "Common in China or Japan?";
"animals21" = "Found in France or Germany?";
"animals22" = "Native to the Americas?";
"animals23" = "Seen in Australia?";
"animals24" = "Hunts for food?";
"animals25" = "Prey for others?";
"animals26" = "Lives in groups?";
"animals27" = "Solitary creature?";
"animals28" = "Migrates long distances?";
"animals29" = "Trained by humans?";
"animals30" = "Used for labor?";
"animals31" = "Eaten by people?";
"animals32" = "Can it carry people?";
"animals33" = "Used by hunters?";
"animals34" = "Used for safety?";
"animals35" = "Watched for fun?";
"animals36" = "Seen at zoos?";
"animals37" = "Kept in fish tanks?";
"animals38" = "Seen in circuses?";
"animals39" = "Lives only in the wild?";
"animals40" = "Seen in cities?";

// nature
"nature01" = "Grows from the ground?";
"nature02" = "Part of the landscape?";
"nature03" = "Found in water?";
"nature04" = "Grows on land?";
"nature05" = "Very tall?";
"nature06" = "Very small?";
"nature07" = "Brightly colored?";
"nature08" = "Mostly green?";
"nature09" = "Likes hot weather?";
"nature10" = "Survives cold?";
"nature11" = "Near the equator?";
"nature12" = "Grows in mild climates?";
"nature13" = "Needs little water?";
"nature14" = "Needs lots of water?";
"nature15" = "Found on mountaintops?";
"nature16" = "Grows at sea level?";
"nature17" = "Seen by the ocean?";
"nature18" = "Far from the coast?";
"nature19" = "Found in forests?";
"nature20" = "Lives in deserts?";
"nature21" = "Found on mountains?";
"nature22" = "Grows in valleys?";
"nature23" = "Found underground?";
"nature24" = "Grows on islands?";
"nature25" = "Planted in gardens?";
"nature26" = "Seen in parks?";
"nature27" = "Grows naturally?";
"nature28" = "Cultivated by people?";
"nature29" = "Endangered?";
"nature30" = "Seen everywhere?";
"nature31" = "Hard to find?";
"nature32" = "Considered pretty?";
"nature33" = "Handle with care?";
"nature34" = "Used by people?";
"nature35" = "Used for decoration?";
"nature36" = "Used for healing?";
"nature37" = "Edible?";
"nature38" = "Used for building?";
"nature39" = "Burned for energy?";
"nature40" = "Do people sit under it?";


// technology
"technology01" = "Can you hold it?";
"technology02" = "Needs electricity?";
"technology03" = "Can you touch it?";
"technology04" = "Connects devices?";
"technology05" = "Easy to move?";
"technology06" = "Fixed in place?";
"technology07" = "Works wirelessly?";
"technology08" = "Needs internet?";
"technology09" = "Used for talking?";
"technology10" = "Used for fun?";
"technology11" = "Boosts productivity?";
"technology12" = "Used for gaming?";
"technology13" = "Takes photos or video?";
"technology14" = "Plays sound?";
"technology15" = "Plays video?";
"technology16" = "Used to write?";
"technology17" = "Helps you navigate?";
"technology18" = "Stores data?";
"technology19" = "Does math?";
"technology20" = "Shows visuals?";
"technology21" = "Takes input?";
"technology22" = "Gives output?";
"technology23" = "Provides power?";
"technology24" = "Connects tech?";
"technology25" = "Used for safety?";
"technology26" = "Works on its own?";
"technology27" = "Uses AI or learning?";
"technology28" = "Feels immersive?";
"technology29" = "Runs systems?";
"technology30" = "Stores info?";
"technology31" = "Used remotely?";
"technology32" = "Used for networking?";
"technology33" = "Sends messages?";
"technology34" = "Used for browsing?";
"technology35" = "Shares files?";
"technology36" = "Streams live content?";
"technology37" = "Protects data?";
"technology38" = "Monitors systems?";
"technology39" = "Controls devices?";
"technology40" = "Improves technology?";

// entertainment
"entertainment01" = "Watched or listened to?";
"entertainment02" = "Performed live?";
"entertainment03" = "Looked at?";
"entertainment04" = "Read?";
"entertainment05" = "Listened to?";
"entertainment06" = "In front of an audience?";
"entertainment07" = "Saved to watch later?";
"entertainment08" = "Interactive?";
"entertainment09" = "Enjoyed by kids?";
"entertainment10" = "Made for adults?";
"entertainment11" = "Teaches something?";
"entertainment12" = "Fictional?";
"entertainment13" = "Based on real events?";
"entertainment14" = "Animated or drawn?";
"entertainment15" = "Includes real people?";
"entertainment16" = "A type of entertainment?";
"entertainment17" = "A person?";
"entertainment18" = "A place?";
"entertainment19" = "An object?";
"entertainment20" = "Popular with many?";
"entertainment21" = "Around for a long time?";
"entertainment22" = "Something recent?";
"entertainment23" = "Passed down over time?";
"entertainment24" = "New or experimental?";
"entertainment25" = "Made by big companies?";
"entertainment26" = "Made by small groups?";
"entertainment27" = "Created to earn money?";
"entertainment28" = "Seen as art?";
"entertainment29" = "Makes people happy?";
"entertainment30" = "Teaches or informs?";
"entertainment31" = "Creates strong feelings?";
"entertainment32" = "Meant to be funny?";
"entertainment33" = "Tells a serious story?";
"entertainment34" = "Exciting or intense?";
"entertainment35" = "Helps people relax?";
"entertainment36" = "Motivating?";
"entertainment37" = "Thought-provoking?";
"entertainment38" = "Uses imagination?";
"entertainment39" = "Represents a culture?";
"entertainment40" = "Enjoyed worldwide?";

// professions
"professions01" = "Does it provide medical care?";
"professions02" = "Is it related to education?";
"professions03" = "Is it about legal matters?";
"professions04" = "Do they deal with customers?";
"professions05" = "Is it a creative job?";
"professions06" = "Does it involve solving problems?";
"professions07" = "Is it hands-on work?";
"professions08" = "Does it serve the public?";
"professions09" = "Is it part of the business world?";
"professions10" = "Does it serve the community?";
"professions11" = "Is it a high-paying job?";
"professions12" = "Is it low-paying?";
"professions13" = "Can it be dangerous?";
"professions14" = "Are safety rules important?";
"professions15" = "Is it a stressful job?";
"professions16" = "Is the setting calm?";
"professions17" = "Does it require higher education?";
"professions18" = "Does it need special skills?";
"professions19" = "Is certification required?";
"professions20" = "Is experience important?";
"professions21" = "Is it teamwork-based?";
"professions22" = "Do they work with animals?";
"professions23" = "Does it involve repairs or upkeep?";
"professions24" = "Is it tech-related?";
"professions25" = "Does it involve craftsmanship?";
"professions26" = "Is it mostly outdoors?";
"professions27" = "Is it mostly indoors?";
"professions28" = "Do they work in an office?";
"professions29" = "Do they work in hospitals or clinics?";
"professions30" = "Is it in schools or classrooms?";
"professions31" = "Is it in food service?";
"professions32" = "Do they work in a store?";
"professions33" = "Are they part of production?";
"professions34" = "Do they do research?";
"professions35" = "Do they work in creative fields?";
"professions36" = "Do they work in legal settings?";
"professions37" = "Do they travel for work?";
"professions38" = "Do they work in workshops?";
"professions39" = "Do they work in farming?";
"professions40" = "Do they work at sea or in ports?";

// home
"home01" = "Is it a place to live?";
"home02" = "Part of a home?";
"home03" = "Used for sleeping?";
"home04" = "Used for cooking?";
"home05" = "Used for washing?";
"home06" = "Used for relaxing?";
"home07" = "Used for eating?";
"home08" = "Stores a vehicle?";
"home09" = "Used for growing plants?";
"home10" = "For sitting outside?";
"home11" = "Walked on?";
"home12" = "Used for storing stuff?";
"home13" = "Stores clothes?";
"home14" = "Used to place things?";
"home15" = "Used to enter or access?";
"home16" = "Used for sitting?";
"home17" = "Used during meals?";
"home18" = "Used for lying down?";
"home19" = "Supports your head?";
"home20" = "Used to cover?";
"home21" = "Covers a window?";
"home22" = "Covers the floor?";
"home23" = "Decorates the floor?";
"home24" = "Provides light?";
"home25" = "Hangs from the ceiling?";
"home26" = "Shows reflection?";
"home27" = "Hung on a wall?";
"home28" = "Used to care for plants?";
"home29" = "Used to hold flowers?";
"home30" = "Shows time?";
"home31" = "Shows temperature?";
"home32" = "Controls temperature?";
"home33" = "Used for safety?";
"home34" = "Found indoors?";
"home35" = "Found outdoors?";
"home36" = "At ground level?";
"home37" = "Above ground?";
"home38" = "Below ground?";
"home39" = "Inside the roof?";
"home40" = "Attached to the building?";

// auto_parts
"auto_parts01" = "Helps move the car?";
"auto_parts02" = "Used for steering?";
"auto_parts03" = "Used for braking?";
"auto_parts04" = "Produces power?";
"auto_parts05" = "Controls speed?";
"auto_parts06" = "Transfers power?";
"auto_parts07" = "Changes gears?";
"auto_parts08" = "Starts combustion?";
"auto_parts09" = "Stores energy?";
"auto_parts10" = "Generates electricity?";
"auto_parts11" = "Manages heat?";
"auto_parts12" = "Filters air?";
"auto_parts13" = "Filters oil?";
"auto_parts14" = "Filters fuel?";
"auto_parts15" = "Creates spark?";
"auto_parts16" = "Controls temperature?";
"auto_parts17" = "Circulates coolant?";
"auto_parts18" = "Lubricates parts?";
"auto_parts19" = "Delivers fuel?";
"auto_parts20" = "Sprays fuel?";
"auto_parts21" = "Mixes fuel and air?";
"auto_parts22" = "Releases exhaust?";
"auto_parts23" = "Reduces noise?";
"auto_parts24" = "Limits emissions?";
"auto_parts25" = "Detects oxygen?";
"auto_parts26" = "Measures airflow?";
"auto_parts27" = "Controls airflow?";
"auto_parts28" = "Takes in air?";
"auto_parts29" = "Collects exhaust?";
"auto_parts30" = "Opens or closes valves?";
"auto_parts31" = "Converts motion?";
"auto_parts32" = "Moves back and forth?";
"auto_parts33" = "Connects piston and crank?";
"auto_parts34" = "Seals the cylinder head?";
"auto_parts35" = "Holds combustion chamber?";
"auto_parts36" = "Controls fuel mix?";
"auto_parts37" = "Keeps timing in sync?";
"auto_parts38" = "Drives accessories?";
"auto_parts39" = "Keeps belt tight?";
"auto_parts40" = "Guides the belt?";
"auto_parts41" = "Absorbs shocks?";
"auto_parts42" = "Supports weight?";
"auto_parts43" = "Holds the wheel?";
"auto_parts44" = "Helps wheel turn?";
"auto_parts45" = "Links steering parts?";
"auto_parts46" = "Controls direction?";
"auto_parts47" = "Improves stability?";
"auto_parts48" = "Connects to steering?";
"auto_parts49" = "Moves with suspension?";
"auto_parts50" = "Connects suspension parts?";

// programming
"programming01" = "Is it a software problem?";
"programming02" = "Is it a coding mistake?";
"programming03" = "Used in backend?";
"programming04" = "Used in frontend?";
"programming05" = "Is it an algorithm?";
"programming06" = "Is it a code module?";
"programming07" = "Is it a data structure?";
"programming08" = "Is it a class?";
"programming09" = "Is it a method or function?";
"programming10" = "Related to inheritance?";
"programming11" = "Related to polymorphism?";
"programming12" = "Related to encapsulation?";
"programming13" = "Is it abstract?";
"programming14" = "Is it an interface?";
"programming15" = "Used to connect systems?";
"programming16" = "Used to organize data?";
"programming17" = "Used for database queries?";
"programming18" = "Is it a query language?";
"programming19" = "Is it a NoSQL tool?";
"programming20" = "Is it a framework or library?";
"programming21" = "Is it a codebase?";
"programming22" = "Is it a dependency?";
"programming23" = "Used for managing packages?";
"programming24" = "Used for version control?";
"programming25" = "Tracks code changes?";
"programming26" = "Supports team work?";
"programming27" = "Used for committing code?";
"programming28" = "Used for branching?";
"programming29" = "Used for merging?";
"programming30" = "Used for deployment?";
"programming31" = "Used in the cloud?";
"programming32" = "Used for server talk?";
"programming33" = "Used in API design?";
"programming34" = "Used for secure connections?";
"programming35" = "Used for open connections?";
"programming36" = "Used for data exchange?";
"programming37" = "Used to format documents?";
"programming38" = "Used for web services?";
"programming39" = "Used for flexible queries?";
"programming40" = "Related to microservices?";
"programming41" = "Used to package apps?";
"programming42" = "Used for virtualization?";
"programming43" = "Manages containers?";
"programming44" = "Used for CI/CD?";
"programming45" = "Checks code validity?";
"programming46" = "Used for unit testing?";
"programming47" = "Used for integration testing?";
"programming48" = "Used for refactoring?";
"programming49" = "Improves performance?";
"programming50" = "Improves efficiency?";

// HOW TO PLAY
"goal" = "Goal";
"goal_text" = "Civilian players try to identify the spy by asking questions without revealing the secret word. The spy, on the other hand, must bluff and deceive to hide their identity!";

"game_selection" = "Game & Selection";
"game_selection_text" = "For each round, spies and the secret word are chosen randomly. Players can earn or lose points depending on their roles.";

"civilians" = "Civilians";
"civilians_text" = "The goal of civilians is to find the spy. They know the secret word, but must observe others and avoid revealing it while trying to identify the spy.";

"spies" = "Spies";
"spies_text" = "Spies do not know the secret word. Their mission is to blend in by bluffing. They may try to guess the word‚Äîor accuse others to protect themselves!";

"scoring" = "Scoring";
"scoring_text" = "Each round, players can accuse someone of being the spy. If a civilian is falsely accused, all civilians lose a point while spies gain one.";

"winning" = "Winning";
"winning_text" = "At the end of the game, each player‚Äôs score is ranked regardless of their roles in each round. The player with the highest score wins!";

"reminder" = "Reminder";
"reminder_text" = "All is fair in love and war.\nAnd this game is a war.";

// Common strings
"OK" = "OK";
"Cancel" = "Cancel";
"Done" = "Done";
"Back" = "Back";
"Next" = "Next";
"Save" = "Save";
"Delete" = "Delete";
"Edit" = "Edit";
"Add" = "Add";
"Yes" = "Yes";
"No" = "No";

// Game related strings
"Game" = "Game";
"Start" = "Start";
"Score" = "Score";
"Timer" = "Timer";
"Round" = "Round";
"Player" = "Player";
"Category" = "Category";
"Word" = "Word";
"Hint" = "Hint";

// Settings
"Settings" = "Settings";
"Players" = "Players";
"Categories" = "Categories";
"How to Play" = "How to Play"; 
